@model int?
@{
    ViewData["Title"] = "Đặt lịch";
    var serviceId = ViewData["ServiceId"]?.ToString() ?? "";
}

<div class="container py-5 animate__animated animate__fadeIn">
    <div class="row">
        <div class="col-lg-6 mb-4" data-aos="fade-right">
            <h2 class="mb-4 fw-bold text-primary">Đặt Lịch Dịch Vụ</h2>
            <p class="lead">Đặt lịch trước để có trải nghiệm tốt nhất tại LoanSpa</p>
            
            <div class="position-relative mb-4">
                <img src="~/images/booking/booking_1.jpg" alt="Booking" class="img-fluid rounded shadow-sm mb-4 booking-image" style="height: 300px; object-fit: cover;" onerror="this.src='/images/spa-default.jpg'">
            </div>
            
            <div class="card border-0 bg-light p-4 info-card">
                <div class="card-body p-0">
                    <h5 class="card-title fw-bold text-primary"><i class="bi bi-info-circle me-2"></i>Thông tin liên hệ</h5>
                    <div class="mt-3">
                        <div class="d-flex align-items-center mb-2">
                            <i class="bi bi-telephone-fill text-primary me-2"></i>
                            <p class="mb-0">0987 654 321</p>
                        </div>
                        <div class="d-flex align-items-center mb-2">
                            <i class="bi bi-envelope-fill text-primary me-2"></i>
                            <p class="mb-0">info@loanspa.com</p>
                        </div>
                        <div class="d-flex align-items-center mb-2">
                            <i class="bi bi-geo-alt-fill text-primary me-2"></i>
                            <p class="mb-0">123 Đường Nguyễn Huệ, Q.1, TP.HCM</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-lg-6" data-aos="fade-left">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-primary text-white p-3">
                    <h3 class="card-title mb-0"><i class="bi bi-calendar-check me-2"></i>Thông Tin Đặt Lịch</h3>
                </div>
                <div class="card-body p-4">
                    <form id="bookingForm">
                        <div class="form-floating mb-3">
                            <input type="text" class="form-control" id="fullName" name="fullName" placeholder="Nhập họ và tên" required>
                            <label for="fullName">Họ và tên <span class="text-danger">*</span></label>
                        </div>

                        <div class="form-floating mb-3">
                            <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber" placeholder="Nhập số điện thoại" required>
                            <label for="phoneNumber">Số điện thoại <span class="text-danger">*</span></label>
                        </div>

                        <div class="form-floating mb-3">
                            <input type="email" class="form-control" id="email" name="email" placeholder="Nhập địa chỉ email" required>
                            <label for="email">Email <span class="text-danger">*</span></label>
                        </div>
                        
                        <div class="card mb-4">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">Chọn dịch vụ</h5>
                            </div>
                            <div class="card-body">
                                <div class="row mb-3">
                                    <div class="col-8">
                                        <select class="form-select" id="serviceSelect">
                                            <option value="" selected disabled>Chọn dịch vụ</option>
                                        </select>
                                    </div>
                                    <div class="col-4">
                                        <div class="input-group">
                                            <input type="number" id="serviceQuantity" class="form-control" value="1" min="1" max="10">
                                            <button class="btn btn-primary" type="button" id="addServiceBtn">
                                                <i class="bi bi-plus"></i> Thêm
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <div id="selectedServicesContainer" class="mt-3">
                                    <div class="alert alert-info">
                                        Chưa có dịch vụ nào được chọn
                                    </div>
                                </div>
                                
                                <div class="mb-0 mt-2">
                                    <div class="d-flex justify-content-between">
                                        <span>Tổng thời gian dự kiến:</span>
                                        <span id="totalDuration">0 phút</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <input type="date" class="form-control" id="bookingDate" name="bookingDate" required min="@DateTime.Now.ToString("yyyy-MM-dd")">
                                    <label for="bookingDate">Ngày <span class="text-danger">*</span></label>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="form-floating">
                                    <select class="form-select" id="bookingTime" name="bookingTime" required>
                                        <option value="" selected disabled>Chọn giờ</option>
                                        <option value="09:00">09:00</option>
                                        <option value="10:00">10:00</option>
                                        <option value="11:00">11:00</option>
                                        <option value="13:30">13:30</option>
                                        <option value="14:30">14:30</option>
                                        <option value="15:30">15:30</option>
                                        <option value="16:30">16:30</option>
                                        <option value="17:30">17:30</option>
                                    </select>
                                    <label for="bookingTime">Giờ bắt đầu <span class="text-danger">*</span></label>
                                </div>
                            </div>
                        </div>
                        
                        <div class="alert alert-info mb-3">
                            <div class="d-flex justify-content-between">
                                <span>Thời gian kết thúc dự kiến:</span>
                                <strong id="estimatedEndTime">--:--</strong>
                            </div>
                        </div>
                        
                        <div class="form-floating mb-4">
                            <textarea class="form-control" id="notes" name="notes" rows="3" style="height: 100px" placeholder="Nhập yêu cầu đặc biệt hoặc ghi chú (nếu có)"></textarea>
                            <label for="notes">Ghi chú</label>
                        </div>
                        
                        <div class="alert alert-warning mb-3">
                            <i class="bi bi-info-circle"></i> Số lượng ghế cần thiết sẽ dựa vào tổng số lượng dịch vụ bạn đặt
                        </div>
                        
                        <div id="bookingResult" class="alert d-none mb-3"></div>
                        
                        <button type="submit" class="btn btn-primary btn-lg w-100 booking-btn">
                            <i class="bi bi-calendar2-check me-2"></i>Đặt Lịch Ngay
                        </button>
                    </form>
                </div>
            </div>
            
            @if (User.Identity.IsAuthenticated)
            {
                <div class="card border-0 shadow-sm mt-4" id="myBookingsCard">
                    <div class="card-header bg-primary text-white p-3">
                        <h3 class="card-title mb-0"><i class="bi bi-calendar-week me-2"></i>Lịch Của Tôi</h3>
                    </div>
                    <div class="card-body p-4" id="myBookingsContainer">
                        <div class="text-center">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                            <p class="mt-2">Đang tải lịch đã đặt...</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="~/js/management.js"></script>
    <script>
        $(document).ready(function() {
            AOS.init();
            
            // Biến toàn cục để lưu trữ dịch vụ đã chọn
            let selectedServices = [];
            let allServices = [];
            const preselectedServiceId = '@serviceId';

            // Lấy danh sách dịch vụ từ API
            $.ajax({
                url: '/api/ServiceApi',
                type: 'GET',
                success: function(services) {
                    console.log("Danh sách dịch vụ từ API:", services);
                    allServices = services;
                    if (services && Array.isArray(services)) {
                        let options = '<option value="" selected disabled>Chọn dịch vụ</option>';
                        services.forEach(function(service) {
                            const serviceId = service.ServiceId || service.serviceId;
                            const serviceName = service.ServiceName || service.serviceName;
                            const price = service.Price || service.price;
                            
                            if (serviceId) {
                                options += `<option value="${serviceId}" data-price="${price}" data-name="${serviceName}" data-duration="${service.Duration || service.duration || 60}">${serviceName} - ${new Intl.NumberFormat('vi-VN').format(price)} VNĐ</option>`;
                            }
                        });
                        $('#serviceSelect').html(options);
                        
                        // Kiểm tra nếu có dịch vụ được chọn trước
                        if (preselectedServiceId) {
                            // Thêm dịch vụ được chọn trước vào danh sách
                            const preselectedService = services.find(s => 
                                (s.ServiceId || s.serviceId).toString() === preselectedServiceId);
                                
                            if (preselectedService) {
                                addServiceToSelected(
                                    preselectedService.ServiceId || preselectedService.serviceId,
                                    preselectedService.ServiceName || preselectedService.serviceName,
                                    preselectedService.Price || preselectedService.price,
                                    1,
                                    preselectedService.Duration || preselectedService.duration || 60
                                );
                            }
                        }
                        
                        // Kiểm tra có dịch vụ đã lưu trong localStorage không
                        const savedServices = localStorage.getItem('selectedServices');
                        if (savedServices) {
                            try {
                                const parsedServices = JSON.parse(savedServices);
                                parsedServices.forEach(s => {
                                    // Tìm thông tin dịch vụ đầy đủ từ danh sách dịch vụ
                                    const fullService = services.find(fs => 
                                        (fs.ServiceId || fs.serviceId) === s.serviceId);
                                    
                                    if (fullService) {
                                        addServiceToSelected(
                                            s.serviceId,
                                            s.serviceName,
                                            s.price,
                                            s.quantity,
                                            fullService.Duration || fullService.duration || 60
                                        );
                                    }
                                });
                                // Xóa localStorage sau khi đã sử dụng
                                localStorage.removeItem('selectedServices');
                            } catch (e) {
                                console.error('Error parsing saved services:', e);
                            }
                        }
                    } else {
                        $('#serviceSelect').html('<option value="" selected disabled>Không có dịch vụ</option>');
                        showBookingMessage("Không có dịch vụ nào khả dụng.", "warning");
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Lỗi khi lấy danh sách dịch vụ:', error);
                    $('#serviceSelect').html('<option value="" selected disabled>Lỗi tải dịch vụ</option>');
                    showBookingMessage("Không thể tải danh sách dịch vụ. Vui lòng thử lại sau.", "danger");
                }
            });

            // Thêm dịch vụ vào danh sách đã chọn
            $('#addServiceBtn').click(function() {
                const serviceSelect = $('#serviceSelect');
                const serviceId = serviceSelect.val();
                
                if (!serviceId) {
                    alert('Vui lòng chọn dịch vụ');
                    return;
                }
                
                const selectedOption = serviceSelect.find('option:selected');
                const serviceName = selectedOption.data('name');
                const servicePrice = selectedOption.data('price');
                const serviceDuration = selectedOption.data('duration') || 60;
                const quantity = parseInt($('#serviceQuantity').val()) || 1;
                
                addServiceToSelected(serviceId, serviceName, servicePrice, quantity, serviceDuration);
                
                // Reset lại trường chọn dịch vụ và số lượng
                serviceSelect.val('');
                $('#serviceQuantity').val(1);
            });
            
            // Hàm thêm dịch vụ vào danh sách đã chọn
            function addServiceToSelected(serviceId, serviceName, price, quantity, duration) {
                // Kiểm tra xem dịch vụ đã có trong danh sách chưa
                const existingIndex = selectedServices.findIndex(s => s.serviceId == serviceId);
                
                if (existingIndex >= 0) {
                    // Nếu đã có, cộng thêm số lượng
                    selectedServices[existingIndex].quantity += quantity;
                } else {
                    // Nếu chưa có, thêm mới
                    selectedServices.push({
                        serviceId: serviceId,
                        serviceName: serviceName,
                        price: price,
                        quantity: quantity,
                        duration: duration
                    });
                }
                
                // Cập nhật UI
                updateSelectedServicesUI();
                updateEndTimeEstimate();
            }
            
            // Hàm xóa dịch vụ khỏi danh sách đã chọn
            window.removeService = function(index) {
                selectedServices.splice(index, 1);
                updateSelectedServicesUI();
                updateEndTimeEstimate();
            };
            
            // Cập nhật UI hiển thị dịch vụ đã chọn
            function updateSelectedServicesUI() {
                const container = $('#selectedServicesContainer');
                
                if (selectedServices.length === 0) {
                    container.html('<div class="alert alert-info">Chưa có dịch vụ nào được chọn</div>');
                    $('#totalDuration').text('0 phút');
                    return;
                }
                
                let html = `
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Dịch vụ</th>
                                    <th class="text-center">Số lượng</th>
                                    <th class="text-end">Đơn giá</th>
                                    <th class="text-end">Thành tiền</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                `;
                
                let totalAmount = 0;
                let maxDuration = 0;
                
                selectedServices.forEach((service, index) => {
                    const price = service.price || 0;
                    const quantity = service.quantity || 1;
                    const subtotal = price * quantity;
                    totalAmount += subtotal;
                    
                    if (service.duration > maxDuration) {
                        maxDuration = service.duration;
                    }
                    
                    html += `
                        <tr>
                            <td>${service.serviceName || 'Dịch vụ không xác định'}</td>
                            <td class="text-center">${quantity}</td>
                            <td class="text-end">${new Intl.NumberFormat('vi-VN').format(price)} VNĐ</td>
                            <td class="text-end">${new Intl.NumberFormat('vi-VN').format(subtotal)} VNĐ</td>
                            <td class="text-center">
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeService(${index})">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    `;
                });
                
                html += `
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="3" class="text-end">Tổng cộng:</th>
                                <th class="text-end">${new Intl.NumberFormat('vi-VN').format(totalAmount)} VNĐ</th>
                                <td></td>
                            </tr>
                        </tfoot>
                    </div>
                `;
                
                container.html(html);
                $('#totalDuration').text(`${maxDuration} phút`);
            }
            
            // Ước tính thời gian kết thúc
            function updateEndTimeEstimate() {
                const bookingDate = $('#bookingDate').val();
                const bookingTime = $('#bookingTime').val();
                
                if (!bookingDate || !bookingTime || selectedServices.length === 0) {
                    $('#estimatedEndTime').text('--:--');
                    return;
                }
                
                // Tìm thời gian dịch vụ dài nhất
                let maxDuration = 0;
                selectedServices.forEach(service => {
                    if (service.duration > maxDuration) {
                        maxDuration = service.duration;
                    }
                });
                
                // Tính thời gian kết thúc
                const startDateTime = new Date(`${bookingDate}T${bookingTime}`);
                const endDateTime = new Date(startDateTime.getTime() + maxDuration * 60000);
                const formattedEndTime = endDateTime.toLocaleTimeString('vi-VN', {
                    hour: '2-digit',
                    minute: '2-digit'
                });
                
                $('#estimatedEndTime').text(formattedEndTime);
            }
            
            // Cập nhật thời gian kết thúc khi thay đổi ngày hoặc giờ
            $('#bookingDate, #bookingTime').change(function() {
                updateEndTimeEstimate();
            });

            // Xử lý đặt lịch
            $('#bookingForm').submit(function(e) {
                e.preventDefault();
                
                if (selectedServices.length === 0) {
                    showBookingMessage("Vui lòng chọn ít nhất một dịch vụ.", "warning");
                    return;
                }
                
                // Tạo object dữ liệu đặt lịch
                const bookingDate = $('#bookingDate').val();
                const bookingTime = $('#bookingTime').val();
                
                if (!bookingDate || !bookingTime) {
                    showBookingMessage("Vui lòng chọn ngày và giờ đặt lịch.", "warning");
                    return;
                }
                
                // Tính toán thời gian dịch vụ dài nhất để xác định thời gian kết thúc
                let maxDuration = 0;
                selectedServices.forEach(service => {
                    if (service.duration > maxDuration) {
                        maxDuration = service.duration;
                    }
                });
                
                // Tạo datetime từ date và time
                const startDateTime = new Date(`${bookingDate}T${bookingTime}`);
                
                var formData = {
                    StartTime: startDateTime.toISOString(),
                    Duration: maxDuration,
                    Notes: $('#notes').val().trim() || "",
                    Services: selectedServices.map(s => ({
                        ServiceId: parseInt(s.serviceId),
                        Quantity: s.quantity
                    }))
                };

                var submitBtn = $(this).find('button[type="submit"]');
                submitBtn.prop('disabled', true)
                    .html('<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Đang xử lý...');
                
                // Gửi request đặt lịch
                $.ajax({
                    url: '/api/Booking/Create',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function(response) {
                        console.log("Kết quả đặt lịch:", response);
                        
                        if (response.appointmentId) {
                            showBookingMessage("Đặt lịch thành công! Đang chuyển hướng...", "success");
                            setTimeout(() => {
                                window.location.href = response.redirectUrl || '/Home/BookingConfirmation/' + response.appointmentId;
                            }, 1500);
                        } else {
                            showBookingMessage(response.message || 'Đặt lịch không thành công', "danger");
                            submitBtn.prop('disabled', false)
                                .html('<i class="bi bi-calendar2-check me-2"></i>Đặt Lịch Ngay');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Lỗi khi đặt lịch:', xhr.responseJSON || error);
                        var errorMessage = 'Có lỗi xảy ra khi đặt lịch. Vui lòng thử lại sau.';
                        
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        } else if (xhr.status === 500) {
                            errorMessage = "Lỗi hệ thống. Vui lòng thử lại sau hoặc liên hệ nhân viên hỗ trợ.";
                        }
                        
                        showBookingMessage(errorMessage, "danger");
                        submitBtn.prop('disabled', false)
                            .html('<i class="bi bi-calendar2-check me-2"></i>Đặt Lịch Ngay');
                    }
                });
            });
            
            function showBookingMessage(message, type) {
                const alertBox = $('#bookingResult');
                alertBox.removeClass('d-none alert-success alert-danger alert-warning')
                    .addClass(`alert-${type}`)
                    .html(message);
                
                // Thêm kiểm tra đảm bảo element tồn tại trước khi scrollIntoView
                setTimeout(() => {
                    if (alertBox.length > 0 && alertBox[0]) {
                        alertBox[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }, 100);
                
                // Tự động ẩn thông báo sau 5 giây
                setTimeout(() => {
                    alertBox.addClass('d-none');
                }, 5000);
            }
            
            function loadMyBookings() {
                if ($('#myBookingsContainer').length) {
                    $.ajax({
                        url: '/api/Booking/MyBookings',
                        type: 'GET',
                        beforeSend: function() {
                            $('#myBookingsContainer').html(`
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Đang tải...</span>
                                    </div>
                                    <p class="mt-2">Đang tải lịch đã đặt...</p>
                                </div>
                            `);
                        },
                        success: function(bookings) {
                            console.log("Lịch đã đặt:", bookings);
                            const container = $('#myBookingsContainer');
                            
                            if (!bookings || bookings.length === 0) {
                                container.html('<div class="alert alert-info">Bạn chưa có lịch đặt nào.</div>');
                                return;
                            }
                            
                            let html = '';
                            // Sắp xếp bookings theo thời gian tạo (nếu cần)
                            bookings.sort((a, b) => new Date(a.createdDate) - new Date(b.createdDate));
                            
                            // Hiển thị với số thứ tự riêng cho mỗi khách hàng
                            bookings.forEach((booking, index) => {
                                let bookingNumber = index + 1; // Đánh số từ 1 và tăng dần
                                
                                let statusClass = 'secondary';
                                switch(booking.status) {
                                    case 'Chờ xác nhận': statusClass = 'warning'; break;
                                    case 'Đã xác nhận': statusClass = 'success'; break;
                                    case 'Đang thực hiện': statusClass = 'info'; break;
                                    case 'Hoàn thành': statusClass = 'primary'; break;
                                    case 'Đã hủy': statusClass = 'danger'; break;
                                }
                                
                                const startDate = new Date(booking.startTime);
                                const formattedDate = startDate.toLocaleDateString('vi-VN');
                                const formattedTime = startDate.toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' });
                                
                                let servicesList = '';
                                if (booking.services && booking.services.length > 0) {
                                    servicesList = '<ul class="mb-0 ps-3">';
                                    booking.services.forEach(service => {
                                        const serviceName = service.ServiceName || service.serviceName || 'Dịch vụ không xác định';
                                        const quantity = service.Quantity || service.quantity || 1;
                                        servicesList += `<li>${serviceName} x${quantity}</li>`;
                                    });
                                    servicesList += '</ul>';
                                } else {
                                    servicesList = '<p class="mb-0">Không có thông tin dịch vụ</p>';
                                }
                                
                                html += `
                                    <div class="card booking-item mb-3 position-relative">
                                        <div class="card-body">
                                            <span class="badge bg-${statusClass} booking-status-badge">${booking.status}</span>
                                            <h5 class="card-title">Lịch hẹn #${bookingNumber}</h5>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p class="mb-1"><strong>Ngày:</strong> ${formattedDate}</p>
                                                    <p class="mb-1"><strong>Giờ:</strong> ${formattedTime}</p>
                                                </div>
                                                <div class="col-md-6">
                                                    <p class="mb-1"><strong>Phòng:</strong> ${booking.rooms && booking.rooms.length > 0 ? booking.rooms.map(r => r.RoomName || r.roomName).join(', ') : 'N/A'}</p>
                                                    <p class="mb-1"><strong>Tổng tiền:</strong> ${new Intl.NumberFormat('vi-VN').format(booking.totalAmount)} VNĐ</p>
                                                </div>
                                            </div>
                                            <div class="mt-2">
                                                <strong>Dịch vụ:</strong>
                                                ${servicesList}
                                            </div>
                                            <a href="/Home/BookingConfirmation/${booking.appointmentId}" class="btn btn-sm btn-outline-primary mt-2">
                                                <i class="bi bi-eye me-1"></i> Xem chi tiết
                                            </a>
                                        </div>
                                    </div>
                                `;
                            });
                            
                            container.html(html);
                        },
                        error: function(xhr, status, error) {
                            console.error('Lỗi khi tải lịch đã đặt:', {
                                status: status,
                                error: error,
                                responseText: xhr?.responseText,
                                statusCode: xhr?.status
                            });
                            
                            $('#myBookingsContainer').html(`
                                <div class="alert alert-danger">
                                    <p><strong>Không thể tải lịch đã đặt.</strong></p>
                                    <p>Lỗi: ${xhr?.status} ${xhr?.statusText || error}</p>
                                    <button class="btn btn-sm btn-outline-danger" onclick="loadMyBookings()">Thử lại</button>
                                </div>
                            `);
                        }
                    });
                }
            }
            
            @if (User.Identity.IsAuthenticated)
            {
                <text>loadMyBookings();</text>
            }
            
            window.loadMyBookings = loadMyBookings;
        });
    </script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <style>
        .booking-image {
            border-radius: 15px;
            transition: all 0.5s ease;
        }
        
        .booking-image:hover {
            transform: scale(1.02);
        }
        
        .info-card {
            transition: all 0.3s ease;
            border-radius: 15px;
        }
        
        .info-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .form-control, .form-select {
            border-radius: 10px;
            padding: 1rem 0.75rem;
            transition: all 0.3s ease;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(var(--primary-rgb), 0.25);
        }
        
        .card {
            border-radius: 15px;
            overflow: hidden;
        }
        
        .card-header {
            background: linear-gradient(45deg, var(--primary-color), var(--primary-light));
        }
        
        .booking-btn {
            border-radius: 10px;
            transition: all 0.3s ease;
            font-weight: 600;
        }
        
        .booking-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(var(--primary-rgb), 0.3);
        }
        
        .booking-item {
            border-left: 4px solid var(--primary-color);
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }
        
        .booking-item:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }
        
        .booking-status-badge {
            position: absolute;
            top: 10px;
            right: 10px;
        }
    </style>
}