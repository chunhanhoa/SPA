@{
    ViewData["Title"] = "Quản lý đặt lịch";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">@ViewData["Title"]</h1>

    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin">Tổng quan</a></li>
        <li class="breadcrumb-item active">Quản lý đặt lịch</li>
    </ol>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">Tổng đặt lịch</h5>
                        <div class="small" id="total-bookings">Đang tải...</div>
                    </div>
                    <div class="display-5"><i class="bi bi-calendar-check"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">Chờ xác nhận</h5>
                        <div class="small" id="pending-bookings">Đang tải...</div>
                    </div>
                    <div class="display-5"><i class="bi bi-hourglass-split"></i></div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h5 class="mb-0">Đã xác nhận</h5>
                        <div class="small" id="confirmed-bookings">Đang tải...</div>
                    </div>
                    <div class="display-5"><i class="bi bi-check-circle"></i></div>
                </div>
            </div>
        </div>

    </div>

    
    <!-- Bookings Table -->
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="bi bi-table me-1"></i>
                Danh sách đặt lịch
            </div>
            <div>
                <button class="btn btn-sm btn-primary" id="refresh-data">
                    <i class="bi bi-arrow-repeat"></i> Tải lại dữ liệu
                </button>
                <button class="btn btn-sm btn-success" id="export-excel">
                    <i class="bi bi-file-earmark-excel"></i> Xuất Excel
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="bookingsTable" width="100%">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Khách hàng</th>
                            <th>Số điện thoại</th>
                            <th>Ngày đặt</th>
                            <th>Thời gian</th>
                            <th>Dịch vụ</th>
                            <th>Ghế</th>
                            <th>Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th>Ghi chú</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan="11" class="text-center">Đang tải dữ liệu...</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Booking Detail Modal -->
<div class="modal fade" id="bookingDetailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Chi tiết đặt lịch #<span id="detail-id"></span></h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="booking-detail-content">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-2">Đang tải dữ liệu...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="edit-status-btn">Cập nhật trạng thái</button>
            </div>
        </div>
    </div>
</div>

<!-- Update Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title">Cập nhật trạng thái đặt lịch #<span id="update-id"></span></h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="current-status" class="form-label">Trạng thái hiện tại</label>
                    <input type="text" class="form-control" id="current-status" readonly>
                </div>
                <div class="mb-3">
                    <label for="new-status" class="form-label">Trạng thái mới</label>
                    <select class="form-select" id="new-status">
                        <option value="Chờ xác nhận">Chờ xác nhận</option>
                        <option value="Đã xác nhận">Đã xác nhận</option>
                    </select>
                </div>
                <div class="alert d-none" id="status-update-message"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="save-status-btn">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function() {
            let bookingsTable;
            let allBookings = [];
            
            // Load booking data
            loadBookingData();
            
            // Initialize events
            $('#refresh-data').click(loadBookingData);
            $('#reset-filters').click(resetFilters);
            $('#status-filter, #date-filter').change(applyFilters);
            $('#search-input').on('keyup', applyFilters);
            
            // Edit status button click
            $(document).on('click', '#edit-status-btn', function() {
                const id = $('#detail-id').text();
                const currentStatus = $('#booking-current-status').text();
                
                $('#update-id').text(id);
                $('#current-status').val(currentStatus);
                $('#new-status').val(currentStatus);
                $('#status-update-message').addClass('d-none');
                
                $('#bookingDetailModal').modal('hide');
                $('#updateStatusModal').modal('show');
            });
            
            // Save status button click
            $('#save-status-btn').click(function() {
                const id = $('#update-id').text();
                const newStatus = $('#new-status').val();
                
                updateBookingStatus(id, newStatus);
            });
            
            // Load booking data function
            function loadBookingData() {
                $.ajax({
                    url: '/api/Booking/ManagementData',
                    type: 'GET',
                    beforeSend: function() {
                        $('#bookingsTable tbody').html('<tr><td colspan="11" class="text-center"><div class="spinner-border spinner-border-sm text-primary" role="status"></div> Đang tải dữ liệu...</td></tr>');
                    },
                    success: function(data) {
                        allBookings = data;
                        renderBookingsTable(data);
                        updateStats(data);
                    },
                    error: function(xhr, status, error) {
                        $('#bookingsTable tbody').html(`<tr><td colspan="11" class="text-center text-danger">Lỗi: ${error}</td></tr>`);
                        console.error('Error loading booking data:', error);
                    }
                });
            }
            
            // Render bookings table
            function renderBookingsTable(bookings) {
                if (bookingsTable) {
                    bookingsTable.destroy();
                }
                
                let tableBody = '';
                
                if (bookings.length === 0) {
                    tableBody = '<tr><td colspan="11" class="text-center">Không có dữ liệu</td></tr>';
                    $('#bookingsTable tbody').html(tableBody);
                    return;
                }
                
                bookings.forEach(function(booking) {
                    // Format dates and times
                    const createdDate = new Date(booking.createdDate).toLocaleDateString('vi-VN');
                    const startDate = new Date(booking.startTime).toLocaleDateString('vi-VN');
                    const startTime = new Date(booking.startTime).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' });
                    const endTime = new Date(booking.endTime).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' });
                    
                    // Format status with dropdown for editing
                    let statusHtml = `
                        <div class="dropdown">
                            <button class="btn btn-sm status-badge dropdown-toggle" data-status="${booking.status}" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                ${getStatusBadge(booking.status)}
                            </button>
                            <ul class="dropdown-menu status-dropdown">
                                <li><a class="dropdown-item status-option ${booking.status === 'Chờ xác nhận' ? 'active' : ''}" 
                                      href="#" data-id="${booking.appointmentId}" data-status="Chờ xác nhận">
                                      <span class="badge bg-warning me-1">Chờ xác nhận</span></a></li>
                                <li><a class="dropdown-item status-option ${booking.status === 'Đã xác nhận' ? 'active' : ''}" 
                                      href="#" data-id="${booking.appointmentId}" data-status="Đã xác nhận">
                                      <span class="badge bg-success me-1">Đã xác nhận</span></a></li>
                            </ul>
                        </div>
                    `;
                    
                    // Format services
                    const services = booking.services.join(', ');
                    
                    // Format chairs - add better null checking
                    let chairs = 'Không có ghế';
                    if (booking.chairs && booking.chairs.length > 0) {
                        chairs = booking.chairs.map(c => {
                            const chairName = c.chairName || 'N/A';
                            const roomName = c.roomName || 'N/A';
                            return `${chairName} (${roomName})`;
                        }).join(', ');
                    }
                    
                    // Format notes (truncate if too long)
                    const notes = booking.notes.length > 30 ? booking.notes.substring(0, 30) + '...' : booking.notes;
                    
                    tableBody += `
                        <tr>
                            <td>${booking.appointmentId}</td>
                            <td>${booking.customerName}</td>
                            <td>${booking.customerPhone}</td>
                            <td>${createdDate}</td>
                            <td>${startTime} - ${endTime}</td>
                            <td>${services}</td>
                            <td>${chairs}</td>
                            <td>${new Intl.NumberFormat('vi-VN').format(booking.totalAmount)} VNĐ</td>
                            <td>${statusHtml}</td>
                            <td>${notes}</td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <button type="button" class="btn btn-info view-booking" data-id="${booking.appointmentId}">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button type="button" class="btn btn-primary edit-status" data-id="${booking.appointmentId}" data-status="${booking.status}">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    `;
                });
                
                $('#bookingsTable tbody').html(tableBody);
                
                // Initialize DataTable
                bookingsTable = $('#bookingsTable').DataTable({
                    responsive: true,
                    language: {
                        url: '//cdn.datatables.net/plug-ins/1.11.5/i18n/vi.json'
                    },
                    order: [[0, 'desc']]
                });
                
                // View booking detail
                $('.view-booking').click(function() {
                    const id = $(this).data('id');
                    viewBookingDetail(id);
                });
                
                // Edit status
                $('.edit-status').click(function() {
                    const id = $(this).data('id');
                    const status = $(this).data('status');
                    
                    $('#update-id').text(id);
                    $('#current-status').val(status);
                    $('#new-status').val(status);
                    $('#status-update-message').addClass('d-none');
                    
                    $('#updateStatusModal').modal('show');
                });
                
                // Direct status change from dropdown
                $('.status-option').click(function(e) {
                    e.preventDefault();
                    const id = $(this).data('id');
                    const newStatus = $(this).data('status');
                    const currentButton = $(this).closest('.dropdown').find('button');
                    const currentStatus = currentButton.data('status');
                    
                    if (newStatus !== currentStatus) {
                        // Show confirmation
                        if (confirm(`Bạn có chắc muốn thay đổi trạng thái thành "${newStatus}"?`)) {
                            updateStatusDirectly(id, newStatus, currentButton);
                        }
                    }
                });
            }
            
            // View booking detail
            function viewBookingDetail(id) {
                $.ajax({
                    url: `/api/Booking/Details/${id}`,
                    type: 'GET',
                    beforeSend: function() {
                        $('#detail-id').text(id);
                        $('#booking-detail-content').html(`
                            <div class="text-center py-5">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Đang tải...</span>
                                </div>
                                <p class="mt-2">Đang tải chi tiết đặt lịch...</p>
                            </div>
                        `);
                        $('#bookingDetailModal').modal('show');
                    },
                    success: function(data) {
                        renderBookingDetail(data, id);
                    },
                    error: function(xhr, status, error) {
                        $('#booking-detail-content').html(`
                            <div class="alert alert-danger">
                                Không thể tải thông tin chi tiết. Lỗi: ${error}
                            </div>
                        `);
                    }
                });
            }
            
            // Render booking detail
            function renderBookingDetail(data, id) {
                const appointment = data.appointment;
                const services = data.services;
                const chairs = data.chairs;
                
                // Format dates
                const createdDate = new Date(appointment.CreatedDate).toLocaleDateString('vi-VN');
                const startDate = new Date(appointment.StartTime).toLocaleDateString('vi-VN');
                const startTime = new Date(appointment.StartTime).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' });
                const endTime = new Date(appointment.EndTime).toLocaleTimeString('vi-VN', { hour: '2-digit', minute: '2-digit' });
                
                // Services list
                let servicesHtml = '';
                if (services && services.length > 0) {
                    servicesHtml = '<ul class="list-group">';
                    services.forEach(service => {
                        servicesHtml += `
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                ${service.ServiceName}
                                <span class="badge bg-primary rounded-pill">${new Intl.NumberFormat('vi-VN').format(service.Price)} VNĐ</span>
                            </li>
                        `;
                    });
                    servicesHtml += '</ul>';
                } else {
                    servicesHtml = '<p class="text-muted">Không có dịch vụ</p>';
                }
                
                // Chairs list - Fix property names to match API response
                let chairsHtml = '';
                if (chairs && chairs.length > 0) {
                    chairsHtml = '<ul class="list-group mt-3">';
                    chairs.forEach(chair => {
                        chairsHtml += `
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                ${chair.ChairName || chair.chairName || 'N/A'}
                                <span class="badge bg-info rounded-pill">Phòng: ${chair.RoomName || chair.roomName || 'N/A'}</span>
                            </li>
                        `;
                    });
                    chairsHtml += '</ul>';
                } else {
                    chairsHtml = '<p class="text-muted mt-3">Không có ghế</p>';
                }
                
                // Format status
                let statusBadge = '';
                switch(appointment.Status) {
                    case 'Chờ xác nhận':
                        statusBadge = '<span class="badge bg-warning">Chờ xác nhận</span>';
                        break;
                    case 'Đã xác nhận':
                        statusBadge = '<span class="badge bg-success">Đã xác nhận</span>';
                        break;
                    default:
                        statusBadge = `<span class="badge bg-secondary">${appointment.Status}</span>`;
                }
                
                const html = `
                    <div class="row">
                        <div class="col-md-6">
                            <h5 class="border-bottom pb-2">Thông tin đặt lịch</h5>
                            <dl class="row">
                                <dt class="col-sm-4">Mã đặt lịch:</dt>
                                <dd class="col-sm-8">#${appointment.AppointmentId}</dd>
                                
                                <dt class="col-sm-4">Ngày tạo:</dt>
                                <dd class="col-sm-8">${createdDate}</dd>
                                
                                <dt class="col-sm-4">Thời gian:</dt>
                                <dd class="col-sm-8">${startDate} (${startTime} - ${endTime})</dd>
                                
                                <dt class="col-sm-4">Tổng tiền:</dt>
                                <dd class="col-sm-8">${new Intl.NumberFormat('vi-VN').format(appointment.TotalAmount)} VNĐ</dd>
                                
                                <dt class="col-sm-4">Trạng thái:</dt>
                                <dd class="col-sm-8" id="booking-current-status">${appointment.Status}</dd>
                                
                                <dt class="col-sm-4">Ghi chú:</dt>
                                <dd class="col-sm-8">${appointment.Notes || 'Không có ghi chú'}</dd>
                            </dl>
                        </div>
                        <div class="col-md-6">
                            <h5 class="border-bottom pb-2">Thông tin khách hàng</h5>
                            <dl class="row">
                                <dt class="col-sm-4">Họ tên:</dt>
                                <dd class="col-sm-8">${appointment.Customer.FullName}</dd>
                                
                                <dt class="col-sm-4">Số điện thoại:</dt>
                                <dd class="col-sm-8">${appointment.Customer.Phone}</dd>
                            </dl>
                            
                            <h5 class="border-bottom pb-2 mt-4">Dịch vụ đã đặt</h5>
                            ${servicesHtml}
                            
                            <h5 class="border-bottom pb-2 mt-4">Ghế đã đặt</h5>
                            ${chairsHtml}
                        </div>
                    </div>
                `;
                
                $('#booking-detail-content').html(html);
            }
            
            // Update booking status
            function updateBookingStatus(id, status) {
                $.ajax({
                    url: `/api/Booking/${id}/UpdateStatus`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ status: status }),
                    beforeSend: function() {
                        $('#save-status-btn').prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang xử lý...');
                        $('#status-update-message').removeClass('alert-success alert-danger').addClass('d-none');
                    },
                    success: function(response) {
                        $('#status-update-message').removeClass('d-none alert-danger').addClass('alert-success').text('Cập nhật trạng thái thành công');
                        
                        setTimeout(function() {
                            $('#updateStatusModal').modal('hide');
                            loadBookingData(); // Reload data
                        }, 1500);
                    },
                    error: function(xhr, status, error) {
                        $('#status-update-message').removeClass('d-none alert-success').addClass('alert-danger').text(`Lỗi: ${xhr.responseJSON?.message || error}`);
                    },
                    complete: function() {
                        $('#save-status-btn').prop('disabled', false).text('Lưu thay đổi');
                    }
                });
            }
            
            // Update statistics
            function updateStats(bookings) {
                const total = bookings.length;
                const pending = bookings.filter(b => b.status === 'Chờ xác nhận').length;
                const confirmed = bookings.filter(b => b.status === 'Đã xác nhận').length;
                const cancelled = bookings.filter(b => b.status === 'Đã hủy').length;
                
                $('#total-bookings').text(`${total} lịch hẹn`);
                $('#pending-bookings').text(`${pending} lịch hẹn`);
                $('#confirmed-bookings').text(`${confirmed} lịch hẹn`);
                $('#cancelled-bookings').text(`${cancelled} lịch hẹn`);
            }
            
            // Apply filters
            function applyFilters() {
                const statusFilter = $('#status-filter').val();
                const dateFilter = $('#date-filter').val();
                const searchTerm = $('#search-input').val().toLowerCase();
                
                let filteredBookings = [...allBookings];
                
                // Apply status filter
                if (statusFilter) {
                    filteredBookings = filteredBookings.filter(b => b.status === statusFilter);
                }
                
                // Apply date filter
                if (dateFilter) {
                    const filterDate = new Date(dateFilter);
                    filteredBookings = filteredBookings.filter(b => {
                        const bookingDate = new Date(b.startTime);
                        return bookingDate.toDateString() === filterDate.toDateString();
                    });
                }
                
                // Apply search filter
                if (searchTerm) {
                    filteredBookings = filteredBookings.filter(b => 
                        b.customerName.toLowerCase().includes(searchTerm) || 
                        (b.notes && b.notes.toLowerCase().includes(searchTerm))
                    );
                }
                
                renderBookingsTable(filteredBookings);
            }
            
            // Reset filters
            function resetFilters() {
                $('#status-filter').val('');
                $('#date-filter').val('');
                $('#search-input').val('');
                
                renderBookingsTable(allBookings);
            }
            
            // Export to Excel functionality
            $('#export-excel').click(function() {
                alert('Tính năng xuất Excel đang được phát triển');
            });
            
            // Function to update status directly from table
            function updateStatusDirectly(id, newStatus, buttonElement) {
                // Add loading indicator
                const originalHtml = buttonElement.html();
                buttonElement.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>');
                buttonElement.prop('disabled', true);
                
                $.ajax({
                    url: `/api/Booking/${id}/UpdateStatus`,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ status: newStatus }),
                    success: function(response) {
                        // Update button to show new status
                        buttonElement.html(getStatusBadge(newStatus));
                        buttonElement.data('status', newStatus);
                        
                        // Show success toast or notification
                        showStatusUpdateNotification(true, "Cập nhật trạng thái thành công");
                        
                        // Reload data after short delay to ensure everything is in sync
                        setTimeout(loadBookingData, 1500);
                    },
                    error: function(xhr, status, error) {
                        // Restore original button state
                        buttonElement.html(originalHtml);
                        buttonElement.prop('disabled', false);
                        
                        // Show error notification
                        showStatusUpdateNotification(false, `Lỗi: ${xhr.responseJSON?.message || error}`);
                    },
                    complete: function() {
                        buttonElement.prop('disabled', false);
                    }
                });
            }

            // Function to show status update notification
            function showStatusUpdateNotification(isSuccess, message) {
                // Create toast notification
                const toastId = 'statusToast' + new Date().getTime();
                const toastHtml = `
                    <div id="${toastId}" class="toast align-items-center text-white bg-${isSuccess ? 'success' : 'danger'} border-0 position-fixed bottom-0 end-0 m-3" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;
                
                // Add toast to the document
                $('body').append(toastHtml);
                
                // Show and auto-hide toast
                const toastElement = new bootstrap.Toast(document.getElementById(toastId), {
                    delay: 3000
                });
                toastElement.show();
                
                // Remove toast element after it's hidden
                $(`#${toastId}`).on('hidden.bs.toast', function() {
                    $(this).remove();
                });
            }
        });
        
        // Function to get status badge HTML
        function getStatusBadge(status) {
            let badge = '';
            switch(status) {
                case 'Chờ xác nhận':
                    badge = '<span class="badge bg-warning">Chờ xác nhận</span>';
                    break;
                case 'Đã xác nhận':
                    badge = '<span class="badge bg-success">Đã xác nhận</span>';
                    break;
                default:
                    badge = `<span class="badge bg-secondary">${status}</span>`;
            }
            return badge;
        }
    </script>
}

@section Styles {
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <style>
        .badge {
            font-size: 0.8rem;
            padding: 0.35em 0.65em;
        }
        
        #bookingsTable th, #bookingsTable td {
            vertical-align: middle;
        }
        
        .btn-group-sm > .btn {
            padding: 0.25rem 0.5rem;
        }
        
        .card-body {
            padding: 1.25rem;
        }
        
        /* Status dropdown styling */
        .status-badge {
            border: none;
            padding: 0;
            background: transparent;
        }
        
        .status-badge::after {
            margin-left: 0.5em;
            vertical-align: middle;
        }
        
        .status-dropdown {
            min-width: 180px;
        }
        
        .status-option {
            display: flex;
            align-items: center;
        }
        
        .status-option.active {
            background-color: #f8f9fa;
            font-weight: 500;
        }
        
        .dropdown-item:active .badge {
            color: #fff !important;
        }
    </style>
}